CREATE DATABASE library ;

USE library ;

-- BOOKS TABLE
CREATE TABLE BOOKS (
BOOKID INT PRIMARY KEY,
TITLE VARCHAR(200),
AUTHOR VARCHAR(100),
GENRE VARCHAR(50),
PUBLISHEDYEAR INT ,
COPIESAVAILABLE INT 
) ;

-- MEMBERS TABLE
CREATE TABLE MEMBERS(
MEMBER_ID INT PRIMARY KEY ,
FULLNAME VARCHAR(100) ,
EMAIL VARCHAR(100) ,
PHONE VARCHAR(15) ,
MEMBERSHIPDATE DATE 
);

-- STAFF TABLE
CREATE TABLE STAFF (
STAF_ID INT PRIMARY KEY ,
FULLNAME VARCHAR(100) ,
ROLE VARCHAR(50) ,
HIREDATE DATE
);

-- ISSUEDBOOKS TABLE 
CREATE TABLE ISSUEDBOOKS(
ISSUEID INT PRIMARY KEY ,
BOOKID INT ,
MEMBER_ID INT ,
STAF_ID INT ,
ISSUEDATE DATE ,
DUEDATE DATE ,
RETURNDATE DATE ,
FOREIGN KEY (BOOKID) REFERENCES BOOKS(BOOKID),
FOREIGN KEY (MEMBER_ID) REFERENCES MEMBERS(MEMBER_ID) ,
FOREIGN KEY (STAF_ID) REFERENCES STAFF(STAF_ID)
) ;

-- FINES TABLE
CREATE TABLE FINES(
FINEID INT PRIMARY KEY ,
ISSUEID INT ,
FINEAMOUNT DECIMAL(6,2),
PAID BOOLEAN DEFAULT FALSE ,
FOREIGN KEY (ISSUEID) REFERENCES ISSUEDBOOKS(ISSUEID)
);

INSERT INTO BOOKS (BOOKID, TITLE, AUTHOR, GENRE, PUBLISHEDYEAR, COPIESAVAILABLE) VALUES
(1, 'The Silent Patient', 'Alex Michaelides', 'Thriller', 2019, 3),
(2, 'Educated', 'Tara Westover', 'Memoir', 2018, 5),
(3, 'Dune', 'Frank Herbert', 'Sci-Fi', 1965, 4),
(4, 'Rich Dad Poor Dad', 'Robert Kiyosaki', 'Finance', 2000, 2),
(5, 'Atomic Habits', 'James Clear', 'Self-help', 2018, 6),
(6, '1984', 'George Orwell', 'Dystopian', 1949, 3),
(7, 'The Alchemist', 'Paulo Coelho', 'Fiction', 1988, 7),
(8, 'Becoming', 'Michelle Obama', 'Biography', 2018, 5),
(9, 'The Power of Now', 'Eckhart Tolle', 'Spirituality', 1997, 2),
(10, 'Sapiens', 'Yuval Noah Harari', 'History', 2011, 4),
(11, 'The Book Thief', 'Markus Zusak', 'Historical Fiction', 2005, 3),
(12, 'Ikigai', 'Francesc Miralles', 'Self-help', 2016, 6),
(13, 'The Subtle Art of Not Giving a F*ck', 'Mark Manson', 'Self-help', 2016, 3),
(14, 'Wings of Fire', 'A.P.J. Abdul Kalam', 'Autobiography', 1999, 4),
(15, 'To Kill a Mockingbird', 'Harper Lee', 'Fiction', 1960, 5);

INSERT INTO MEMBERS (MEMBER_ID, FULLNAME, EMAIL, PHONE, MEMBERSHIPDATE) VALUES
(101, 'Ananya Sharma', 'ananya@gmail.com', '9876543210', '2023-01-15'),
(102, 'Rohan Verma', 'rohanv@gmail.com', '9123456780', '2022-11-10'),
(103, 'Meera Nair', 'meera.nair@mail.com', '9988776655', '2023-07-01'),
(104, 'Aditya Singh', 'aditya.singh@gmail.com', '9871234560', '2024-02-05'),
(105, 'Neha Rajput', 'neharajput@mail.com', '9988112233', '2023-04-18'),
(106, 'Arjun Mehta', 'arjun.mehta@mail.com', '9898989898', '2022-09-20'),
(107, 'Priya Iyer', 'priya.iyer@mail.com', '9112233445', '2023-06-14'),
(108, 'Rahul Gupta', 'rahul.gupta@mail.com', '9001122334', '2022-12-01'),
(109, 'Sana Khan', 'sana.khan@mail.com', '9990001112', '2023-08-10'),
(110, 'Vikram Joshi', 'vikram.joshi@mail.com', '9332211445', '2024-01-25'),
(111, 'Ishita Rao', 'ishita.rao@mail.com', '9881122334', '2023-11-17'),
(112, 'Nikhil Patil', 'nikhil.patil@mail.com', '9822211990', '2022-10-05');

INSERT INTO STAFF (STAF_ID, FULLNAME, ROLE, HIREDATE) VALUES
(1, 'Kavita Mishra', 'Librarian', '2020-06-01'),
(2, 'Suresh Kumar', 'Assistant', '2021-03-12'),
(3, 'Rina Joshi', 'Manager', '2019-08-22'),
(4, 'Mohit Jain', 'Technician', '2021-07-10'),
(5, 'Preeti Nair', 'Assistant Librarian', '2022-01-15'),
(6, 'Amit Bansal', 'Clerk', '2020-11-01'),
(7, 'Leena Desai', 'Senior Librarian', '2018-04-18'),
(8, 'Tanmay Verma', 'IT Support', '2021-09-05'),
(9, 'Nisha Kapoor', 'Front Desk', '2022-03-14'),
(10, 'Rahul Deshmukh', 'Inventory Manager', '2023-02-28');

INSERT INTO ISSUEDBOOKS (ISSUEID, BOOKID, MEMBER_ID, STAF_ID, ISSUEDATE, DUEDATE, RETURNDATE) VALUES
(1001, 1, 101, 1, '2023-12-01', '2023-12-10', '2023-12-09'),
(1002, 3, 102, 2, '2024-01-05', '2024-01-15', NULL),
(1003, 2, 103, 3, '2024-02-20', '2024-03-01', '2024-03-01'),
(1004, 4, 104, 2, '2024-04-01', '2024-04-11', NULL),
(1005, 5, 105, 1, '2024-03-10', '2024-03-20', '2024-03-19'),
(1006, 6, 106, 3, '2023-11-25', '2023-12-05', NULL),
(1007, 7, 107, 4, '2024-01-10', '2024-01-20', '2024-01-19'),
(1008, 8, 108, 5, '2023-10-05', '2023-10-15', '2023-10-14'),
(1009, 9, 109, 6, '2023-12-12', '2023-12-22', '2023-12-21'),
(1010, 10, 110, 7, '2024-02-01', '2024-02-11', NULL),
(1011, 11, 111, 8, '2023-09-10', '2023-09-20', '2023-09-18'),
(1012, 12, 112, 9, '2024-01-15', '2024-01-25', NULL);

INSERT INTO FINES (FINEID, ISSUEID, FINEAMOUNT, PAID) VALUES
(1, 1002, 50.00, FALSE),
(2, 1004, 20.00, TRUE),
(3, 1006, 60.00, FALSE),
(4, 1010, 10.00, TRUE),
(5, 1012, 25.00, FALSE),
(6, 1001, 0.00, TRUE),
(7, 1005, 0.00, TRUE),
(8, 1011, 5.00, TRUE),
(9, 1003, 0.00, TRUE),
(10, 1007, 0.00, TRUE);


select * from books ;

-- TASK 1. List all books with less than 3 copies available 
select * from books where COPIESAVAILABLE < 3 ;

-- TASK 2. Find members who haven't returned books yet 
SELECT FULLNAME , TITLE , ISSUEDATE , DUEDATE FROM MEMBERS INNER JOIN
ISSUEDBOOKS ON ISSUEDBOOKS.MEMBER_ID = MEMBERS.MEMBER_ID INNER JOIN 
BOOKS ON BOOKS.BOOKID = ISSUEDBOOKS.BOOKID 
WHERE ISSUEDBOOKS.RETURNDATE IS NULL ;

-- TASK 3. Top 5 most issued books 
SELECT  BOOKS.TITLE ,COUNT(*) AS TIMESISSUED
FROM ISSUEDBOOKS INNER JOIN BOOKS ON BOOKS.BOOKID = ISSUEDBOOKS.BOOKID
GROUP BY BOOKS.TITLE ORDER BY TIMESISSUED DESC;

-- TASK 4. Members who borrowed more than 2 books 
SELECT MEMBERS.FULLNAME , COUNT(BOOKS.BOOKID) AS BOOKS_TAKEN 
FROM MEMBERS  INNER JOIN ISSUEDBOOKS ON MEMBERS.MEMBER_ID = ISSUEDBOOKS.MEMBER_ID 
INNER JOIN BOOKS ON BOOKS.BOOKID = ISSUEDBOOKS.BOOKID GROUP BY MEMBERS.FULLNAME ;

-- Staff Performance and mangement

-- TASK 5. Books issued by each staff member 
SELECT  STAFF.FULLNAME , COUNT(ISSUEDBOOKS.ISSUEID) FROM STAFF JOIN ISSUEDBOOKS
ON STAFF.STAF_ID = ISSUEDBOOKS.STAF_ID GROUP BY STAFF.FULLNAME ;

-- TASK 6. Find staff who have not issued any book yet :
SELECT  STAFF.FULLNAME  FROM STAFF LEFT JOIN ISSUEDBOOKS
ON STAFF.STAF_ID = ISSUEDBOOKS.STAF_ID WHERE ISSUEDBOOKS.STAF_ID IS NULL ;

-- BOOK INSIGHTS 
-- TASK 7. GENRES WITH MOST BOOKS IN STOCK 
SELECT BOOKS.GENRE , SUM(COPIESAVAILABLE) AS STOCK FROM BOOKS 
GROUP BY GENRE ORDER BY STOCK DESC ;

-- TASK 8. BOOKS NEVER ISSUED 
SELECT BOOKS.TITLE  FROM BOOKS  
LEFT JOIN ISSUEDBOOKS ON BOOKS.BOOKID = ISSUEDBOOKS.BOOKID 
WHERE ISSUEDATE IS NULL ;

-- Time based 
-- TASK 9. Books RETURNED LATE 
SELECT MEMBERS.FULLNAME FROM MEMBERS JOIN ISSUEDBOOKS 
ON MEMBERS.MEMBER_ID = ISSUEDBOOKS.MEMBER_ID 
WHERE RETURNDATE IS NOT NULL AND RETURNDATE > DUEDATE ;

-- TASK 10 . BOOKS ISSUED IN JAN2024
SELECT BOOKS.TITLE , ISSUEDBOOKS.ISSUEDATE
FROM ISSUEDBOOKS
JOIN BOOKS ON ISSUEDBOOKS.BOOKID = BOOKS.BOOKID 
WHERE ISSUEDBOOKS.ISSUEDATE 
BETWEEN '2024-01-01' AND '2024-01-31' ;